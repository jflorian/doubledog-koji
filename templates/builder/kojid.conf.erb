<%#
This file is part of the doubledog-koji Puppet module.
Copyright 2016-2021 John Florian
SPDX-License-Identifier: GPL-3.0-or-later
-%>
# This file is managed by Puppet via the "<%= @module_name %>" module.
#
# vim: filetype=configparser

[kojid]
# The number of seconds to sleep between tasks
sleeptime=<%= @sleep_time %>

# The maximum number of jobs that kojid will handle at a time
maxjobs=<%= @max_jobs %>

# The minimum amount of free space (in MBs) required for each build root
minspace=<%= @min_space %>

# The directory root where work data can be found from the koji hub
topdir=<%= @top_dir %>

# The directory root for temporary storage
workdir=<%= @work_dir %>

# The temporary directory in buildroot
chroot_tmpdir=<%= @chroot_tmpdir %>

# The directory root for mock
mockdir=<%= @mock_dir %>

# The user to run as when doing builds
mockuser=<%= @mock_user %>

# The vendor to use in rpm headers
;vendor=Koji

# The packager to use in rpm headers
;packager=Koji

# The distribution to use in rpm headers
;distribution=Koji

# The _host string to use in mock
;mockhost=koji-linux-gnu

# Timeout for build duration
rpmbuild_timeout=<%= @rpmbuild_timeout %>

# Install timeout(seconds) for image build
oz_install_timeout=<%= @oz_install_timeout %>

# The URL for the xmlrpc server
server=<%= @hub %>

# The URL for the file access
topurl=<%= @downloads %>

# use createrepo_c rather than createrepo
use_createrepo_c=<%= @use_createrepo_c %>

# A space-separated list of tuples from which kojid is allowed to checkout.
# The format of those tuples is:
#
# host:repository[:use_common[:source_cmd]]
#
# Incorrectly-formatted tuples will be ignored.
#
# If use_common is not present, kojid will attempt to checkout a common/
# directory from the repository.  If use_common is set to no, off, false, or 0,
# it will not attempt to checkout a common/ directory.
#
# source_cmd is a shell command (args separated with commas instead of spaces)
# to run before building the srpm. It is generally used to retrieve source
# files from a remote location.  If no source_cmd is specified, "make sources"
# is run by default.
allowed_scms=<%= @allowed_scms.join(' ') %>

# A directory to bind mount into Source RPM creation so that some
# credentials can be supplied when required to fetch sources, e.g.
# when the place the sources are fetched from requires all accesses to
# be authenticated in order to satisfy auditing requirements.
#
# The directory specified here will turn up in the SRPMfromSCM chroot
# as /credentials. It is up to whatever implements "make_source_cmd"
# to make appropriate use of any credentials supplied.
#
# Be aware that this means "make_source_cmd" has access to these
# credentials and could steal them; any credentials supplied
# should be easily disabled, and not used for other purposes.
;scm_credentials_dir = /etc/kojid/scmcredentials

# The mail host to use for sending email notifications
smtphost=<%= @smtp_host %>

# SMTP user and pass (uncomment and fill in if your smtp server requires authentication)
;smtp_user=user@example.com
;smtp_pass=CHANGEME

# The From address used when sending email notifications
from_addr=Koji Build System <buildsys@<%= @fqdn %>>

# configuration for Kerberos authentication

# the format of the principal used by the build hosts
# %s will be replaced by the FQDN of the host
;host_principal_format = compile/%s@EXAMPLE.COM

# location of the keytab
;keytab = /etc/kojid/kojid.keytab

# configuration for SSL authentication

# client certificate
cert = /etc/kojid/kojid.crt

# certificate of the CA that issued the HTTP server certificate
serverca = /etc/kojid/hub-ca-chain.crt

# if set to True, failing subtask will not automatically cancel other siblings
build_arch_can_fail = <%= @build_arch_can_fail %>

# if set to True, tag extra 'mock.bootstrap_image' can be used
;mock_boostrap_image = False

# image build with raw-xz type will use following xz options
;xz_options=-z6T0

# if set to True additional logs with timestamps will get created and uploaded
# to hub. It could be useful for debugging purposes, but creates twice as many
;log files
;log_timestamps = False

# enabled plugins, base koji installation has access to runroot and save_failed_tree
# none of these is enabled by default
;plugin = 

# path where builder plugins are located, there could be multiple paths delimited by :
;pluginpath = /usr/lib/koji-builder-plugins

# ==========
# DISCLAIMER
# ==========
#
# The follow options were gleaned from get_options() in /usr/sbin/kojid.
# There is no documentation for these and perhaps no promise of future
# support.  However, get_options() does seem to fail for any unknown option.
# Any documentation given here was learned the hard way through
# experimentation and analyses of the source.

# admin_emails
# ccache
# createrepo_skip_stat
# createrepo_update
failed_buildroot_lifetime=<%= @failed_buildroot_lifetime %>
# keepalive
# krb_principal
# literal_task_arches

# It appears that log_level *may* have been obsoleted by the --debug and
# --verbose CLI options but this hasn't been substantiated.
# One of: CRITICAL, ERROR, WARNING, INFO or DEBUG
;log_level=DEBUG

# maven_repo_ignore
# max_retries
# offline_retry
# offline_retry_interval
# password
# pkgurl
# pluginpath
# retry_interval
# support_rpm_source_layout
# use_fast_upload

# The user name has to match the host name you used with "koji add-host ...".
# Ordinarily, kojid will authenticate to the Hub using the Common Name from
# the client certificate (see "cert" setting above) as the user name.  The
# "user" setting *might* allow you to override the CN.
;user=<%= @fqdn %>

# yum_proxy
